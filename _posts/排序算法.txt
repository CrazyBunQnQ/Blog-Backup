---
date: 2017-02-27 20:55
status: public
title: 排序算法
---

<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"></script>
# 冒泡排序 #
## 冒泡排序原理 ##

>**1. 比较相邻的元素。如果第一个比第二个大，就交换他们两个。**
>**2. 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。**
>**3. 针对所有的元素重复以上的步骤，除了最后一个。**
>**4. 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。**

#### 使用冒泡排序法从大到小排序 ####
```java
    public void bubbleSort(int[] a) {
        int tmp = 0;//用来保存临时数值
        for (int i = a.length - 1; i > 0; i--) {
            for (int j = 0; j < i; j++) {
                if (a[j] < a[j + 1]) {//交换两个数的位置
                    tmp = a[j];
                    a[j] = a[j + 1];
                    a[j + i] = tmp;
                }
            }
        }
    }
```
***

# 选择排序 #
## 选择排序原理 ##
>1.从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置。
>2.直到全部待排序的数据元素排完。 选择排序是不稳定的排序方法（比如序列[5， 5， 3]第一次就将第一个[5]与[3]交换，导致第一个5挪动到第二个5后面）。

***
## 插入排序 ##


***
## 附：常用排序法比较 ##
>PS:MarkDown 加入数学公式的方式是加入一行 MathJax 引擎的脚本，然后...哈！
>$$x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}$$

|排序方法|最好时间|平均时间|最坏时间|辅助空间|稳定性|
|:------:|:------:|:------:|:------:|:------:|:----:|
|冒泡排序|$$ O(n) $$|$$ O(n^2) $$|$$ O(n^2) $$|$$ O(1) $$|稳定|
|选择排序|$$ O(n^2) $$|$$ O(n^2) $$|$$ O(n^2) $$|$$ O(1) $$|不稳定|
|直接插入|$$ O(n) $$|$$ O(n^2) $$|$$ O(n^2) $$|$$ O(1) $$|稳定|
|二分插入|$$ O(n) $$|$$ O(n^2) $$|$$ O(n^2) $$|$$ O(1) $$|稳定|
|希尔排序|-|$$ O(n1.25) $$|-|$$ O(1) $$|不稳定|
|快速排序|$$ O(n^2) $$|$$ O(n\log2n) $$|$$ O(n^2) $$|$$ O(\log2n) $$|不稳定|
|堆排序|$$ O(n\log2n) $$|$$ O(n\log2n) $$|$$ O(n\log2n) $$|-|不稳定|
|归并排序|$$ O(n\log2n) $$|$$ O(n\log2n) $$|$$ O(n\log2n) $$|$$ O(n) $$|稳定|
|基数排序|$$ O(d(rd+n)) $$|$$ O(d(rd+n)) $$|$$ O(d(rd+n)) $$|$$ O(rd+n) $$|稳定|